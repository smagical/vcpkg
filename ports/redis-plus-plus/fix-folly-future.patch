diff --git a/CMakeLists.txt b/CMakeLists.txt
index e45ca43..91d1990 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -110,6 +110,9 @@ if(REDIS_PLUS_PLUS_BUILD_ASYNC)
     elseif(REDIS_PLUS_PLUS_ASYNC_FUTURE STREQUAL "boost")
         set(REDIS_PLUS_PLUS_ASYNC_FUTURE_HEADER "${REDIS_PLUS_PLUS_SOURCE_DIR}/future/boost")
         find_package(Boost REQUIRED COMPONENTS system thread)
+    elseif(REDIS_PLUS_PLUS_ASYNC_FUTURE STREQUAL "folly")
+        set(REDIS_PLUS_PLUS_ASYNC_FUTURE_HEADER "${REDIS_PLUS_PLUS_SOURCE_DIR}/future/folly")
+        find_package(folly CONFIG REQUIRED)
     else()
         message(FATAL_ERROR "invalid REDIS_PLUS_PLUS_ASYNC_FUTURE")
     endif()
@@ -204,6 +207,8 @@ if(REDIS_PLUS_PLUS_BUILD_STATIC)
         target_include_directories(${STATIC_LIB} PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/${REDIS_PLUS_PLUS_ASYNC_FUTURE_HEADER}>)
         if(REDIS_PLUS_PLUS_ASYNC_FUTURE STREQUAL "boost")
             target_include_directories(${STATIC_LIB} SYSTEM PUBLIC $<BUILD_INTERFACE:${Boost_INCLUDE_DIR}>)
+        elseif(REDIS_PLUS_PLUS_ASYNC_FUTURE STREQUAL "folly")
+            target_link_libraries(${SHARED_LIB} PUBLIC Folly::folly)
         endif()
     endif()
 
@@ -258,6 +263,8 @@ if(REDIS_PLUS_PLUS_BUILD_SHARED)
         target_link_libraries(${SHARED_LIB} PUBLIC ${REDIS_PLUS_PLUS_ASYNC_LIB})
         if(REDIS_PLUS_PLUS_ASYNC_FUTURE STREQUAL "boost")
             target_include_directories(${SHARED_LIB} SYSTEM PUBLIC $<BUILD_INTERFACE:${Boost_INCLUDE_DIR}>)
+        elseif(REDIS_PLUS_PLUS_ASYNC_FUTURE STREQUAL "folly")
+            target_link_libraries(${SHARED_LIB} PUBLIC Folly::folly)
         endif()
     endif()
 
diff --git a/src/sw/redis++/future/folly/sw/redis++/async_utils.h b/src/sw/redis++/future/folly/sw/redis++/async_utils.h
new file mode 100644
index 0000000..0b0d315
--- /dev/null
+++ b/src/sw/redis++/future/folly/sw/redis++/async_utils.h
@@ -0,0 +1,37 @@
+/**************************************************************************
+   Copyright (c) 2021 sewenew
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+ *************************************************************************/
+
+#ifndef SEWENEW_REDISPLUSPLUS_ASYNC_UTILS_H
+#define SEWENEW_REDISPLUSPLUS_ASYNC_UTILS_H
+
+
+#include <folly/futures/Future.h>
+#include <folly/futures/Promise.h>
+namespace sw {
+
+    namespace redis {
+
+        template <typename T>
+        using Future = folly::Future<T>;
+
+        template <typename T>
+        using Promise = folly::Promise<T>;
+
+    }
+
+}
+
+#endif // end SEWENEW_REDISPLUSPLUS_ASYNC_UTILS_H
